---
import Layout from "../../../layouts/Global.astro"
import { getCollection, CollectionEntry } from "astro:content";
import ContentBlock from '../../../components/ContentBlock.astro'
import type {blogg} from '../../../schemas'
import customParseFormat from 'dayjs/plugin/customParseFormat';
import {sort_} from '../../../utils'

export async function getStaticPaths() {
  const allPosts = await getCollection("blogs");
  const uniqueTags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags.includes(tag)
    );
    return {
      params: {tag},
      props: { posts: filteredPosts, tags: uniqueTags.filter(x => { return x != tag})},
    };
  });
}

const { tag} = Astro.params;
const { posts, tags} = Astro.props;
const sortedblogs = sort_(posts, true);

---

<Layout
  title="Frank"
  description="I'm Frank. I occasionally publish articles about programming and tech."
>
  <h1
    class="text-xl md:text-2xl bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 bg-clip-text text-transparent"
  >
  Article with Tag: <span class="tag-name c-[#212020] dark:c-[#ffe3e3]">{tag}</span>
  </h1>
  <p class="text-neutral-400 text-sm mt-1 mb-3">
    I may write when I don't have a good mood<br>
  </p>
  <div class="tags">
    <p class="p-y[0.5rem] text-zinc-600 dark:text-neutral-200">Tags:</p>
    {
      tags.map((utag) => (
          <p class="tag">
            <a
                class="ll text-zinc-600 dark:text-neutral-400 underline"
                href={`/personal_site/blogs/tags/${utag}`}
            >
              {utag}
            </a>
          </p>
      ))
    }
  </div>
  <div class="content-container flex flex-wrap gap-3">
    {
      sortedblogs.map((blog) => (
        <ContentBlock blog={blog} ishome={false}/>
      ))
    }
  </div>
</Layout>

<style>
  .tags {
    display: flex;
    flex-wrap: wrap;
    margin: 0 auto;
    margin-bottom: 0.75rem;
  }

  .tag {
    /* margin: 0.25em;
    border: dotted 1px #a1a1a1;
    border-radius: 1em; */
    padding: 0.5em 0.5em;
    font-size: 1em;
    /* background-image: linear-gradient(120deg, #c767f7 0%, #f980b4 100%); */
  }
  .tag :hover {
    background-image: linear-gradient(120deg, #f093fb 0%, #f5576c 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-fill-color: transparent;
    text-decoration: none;
    transition: all 0.25s ease-in-out;
  }
  .dark .tag :hover {
    background-image: linear-gradient(120deg, #f093fb 0%, #f5576c 100%);
  }

  .tag-name {
    text-decoration: none;
    font-weight: 700;
    position: relative;
  }
  .tag-name::before {
  content: '';
  background: linear-gradient(60deg, #bc5dc7 0%, #f5576c 100%);
  position: absolute;
  left: 0;
  bottom: 3px;
  width: 100%;
  height: 8px;
  z-index: -1;
  transition: all .3s ease-in-out;
}

.tag-name:hover::before {
  bottom: 0;
  height: 100%;
}
</style>